# Autor: Lorena Suset Romero Torres
# Fecha: 04/07/2025
# Proyecto: Dashcam (TFG)

# -----------------------------------------------
# Librerías necesarias
from smbus2 import SMBus
import time
import csv
import pandas as pd
import matplotlib.pyplot as plt

# -----------------------------------------------
# Constantes globales

# Dirección I2C del MPU-6050
MPU_ADDR = 0x68

# Registros del sensor
PWR_MGMT_1   = 0x6B
ACCEL_XOUT_H = 0x3B
GYRO_XOUT_H  = 0x43

# Sensibilidades del sensor
ACCEL_SENSITIVITY = 16384.0  # LSB/g para ±2g
GYRO_SENSITIVITY  = 131.0    # LSB/(°/s) para ±250°/s

# Archivo de datos
CSV_FILE = "datos_frenado.csv"
IMG_FILE = "figura_frenado.png"

# -----------------------------------------------
# Funciones de lectura del sensor

def read_word(bus, reg):
    high = bus.read_byte_data(MPU_ADDR, reg)
    low  = bus.read_byte_data(MPU_ADDR, reg + 1)
    value = (high << 8) + low
    if value >= 0x8000:
        value = -((65535 - value) + 1)
    return value

def get_accel(bus):
    x = read_word(bus, ACCEL_XOUT_H)     / ACCEL_SENSITIVITY
    y = read_word(bus, ACCEL_XOUT_H + 2) / ACCEL_SENSITIVITY
    z = read_word(bus, ACCEL_XOUT_H + 4) / ACCEL_SENSITIVITY
    return x, y, z

def get_gyro(bus):
    x = read_word(bus, GYRO_XOUT_H)     / GYRO_SENSITIVITY
    y = read_word(bus, GYRO_XOUT_H + 2) / GYRO_SENSITIVITY
    z = read_word(bus, GYRO_XOUT_H + 4) / GYRO_SENSITIVITY
    return x, y, z

# -----------------------------------------------
# Adquisición de datos

with SMBus(1) as bus, open(CSV_FILE, "w", newline='') as file:
    # Despertar el sensor
    bus.write_byte_data(MPU_ADDR, PWR_MGMT_1, 0)

    writer = csv.writer(file)
    writer.writerow(["timestamp", "accel_x", "accel_y", "accel_z", "gyro_x", "gyro_y", "gyro_z"])

    print("Grabando datos... Presiona Ctrl+C para detener.")

    try:
        while True:
            ts = time.time()
            ax, ay, az = get_accel(bus)
            gx, gy, gz = get_gyro(bus)

            writer.writerow([ts, ax, ay, az, gx, gy, gz])
            time.sleep(0.05)  # 20 Hz

    except KeyboardInterrupt:
        print("Grabación finalizada.")

# -----------------------------------------------
# Graficar resultados

# Carga de datos desde el archivo CSV
data = pd.read_csv(CSV_FILE)

# Opcional: centrar el tiempo en t = 0
data["timestamp"] -= data["timestamp"].iloc[0]

# Crear gráfico
plt.figure(figsize=(10, 6))
plt.plot(data["timestamp"], data["accel_x"], label="Aceleración X (adelante/atrás)")
plt.plot(data["timestamp"], data["accel_y"], label="Aceleración Y (izquierda/derecha)")
plt.plot(data["timestamp"], data["accel_z"], label="Aceleración Z (gravedad)")

plt.title("Mediciones del GY-521 durante evento de frenado brusco")
plt.xlabel("Tiempo (s)")
plt.ylabel("Aceleración (g)")
plt.legend()
plt.grid(True)
plt.tight_layout()

# Guardar imagen para insertar en el informe
plt.savefig(IMG_FILE)
plt.show()
